<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.mapper.BrandMapper">

    <!--
        数据库表的字段名称 和 实体类的属性名称 不一样，则不能自动封装数据
            (1) 起别名: 对不一样的列名起别名，让别名和实体类的属性名一样
                    缺点: 每次查询都要定义一次别名
                    解决方法: sql片段
                        缺点: 不灵活
            (2) resultMap:
                1. 定义resultMap标签
                2. 在<select>标签中，使用resultMap属性替换 resultType属性

    -->

    <!-- id唯一标识。type指定映射的类型，支持别名-->
    <resultMap id="brandResultMap" type="brand">
        <!--
        id: 完成主键字段的影视
            column: 表的列名
            property: 实体类的属性名
        result: 完成一般字段的映射
            column: 表的列名
            property: 实体类的属性名
        -->
        <result column="brand_name" property="brandName" />
        <result column="company_name" property="companyName" />
    </resultMap>

        <select id="selectAll" resultMap="brandResultMap">
            select
                *
            from tb_brand;
        </select>



    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id = #{id};
    </select>


    <!--
        sql片段
    -->
<!--    <sql id="brand_column">-->
<!--        select id, brand_name AS brandName, company_name AS companyName, ordered, description, status-->
<!--    </sql>-->

<!--    <select id="selectAll" resultType="brand">-->
<!--        select-->
<!--            <include refid="brand_column" />-->
<!--        from tb_brand;-->
<!--    </select>-->



    <!--    <select id="selectAll" resultType="brand">-->
    <!--        select * from tb_brand;-->
    <!--    </select>-->
</mapper>